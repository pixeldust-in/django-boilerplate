"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 2.1.5.
For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "0+d1xdj%+0tw=5)$3k)ku%!j!!+1#i%9q9=)a*fd*b_pdxdk2t"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
PRODUCTION = False
HASHID_FIELD_SALT = ""
HASHID_UPPER_ALPHA_NUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVQXYZ"

env_path = os.path.join(BASE_DIR)

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

ADMINS = (("Sandip Baradiya", "baradiya.sandip@gmail.com"),)

MANAGERS = ADMINS

ALLOWED_HOSTS = ["*"]
APPEND_SLASH = True
HTML_MINIFY = False
COMPRESS_ENABLED = False
COMPRESS_OFFLINE = False
COMPRESS_CSS_FILTERS = [
    "compressor.filters.css_default.CssAbsoluteFilter",
    "compressor.filters.cssmin.CSSMinFilter",
]

AUTH_USER_MODEL = "core.User"
LOGIN_REDIRECT_URL = "/"
LOGIN_URL = "/login/"


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "widget_tweaks",
    "crispy_forms",
    "compressor",
    "django_user_agents",
    "core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_user_agents.middleware.UserAgentMiddleware",
]

ROOT_URLCONF = "urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "src/templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "utils.context_processor",
            ]
        },
    }
]

WSGI_APPLICATION = "wsgi.application"

MESSAGE_STORAGE = "django.contrib.messages.storage.session.SessionStorage"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Logging
LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "filters": {
        "require_debug_false": {"()": "django.utils.log.RequireDebugFalse"},
        "require_production_false": {
            "()": "django.utils.log.CallbackFilter",
            "callback": lambda _: not PRODUCTION,
        },
        "require_production_true": {
            "()": "django.utils.log.CallbackFilter",
            "callback": lambda _: PRODUCTION,
        },
        "require_admins": {
            "()": "django.utils.log.CallbackFilter",
            "callback": lambda _: ADMINS,
        },
    },
    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s"
        },
        "syslog": {"format": ("%(name)s [%(levelname)s]-[%(funcName)s]: %(message)r")},
    },
    "handlers": {
        "null": {"level": "DEBUG", "class": "logging.NullHandler"},
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            # "filters": ["request_id"],
            "formatter": "verbose",
        },
        "mail_admins": {
            "level": "ERROR",
            "filters": ["require_debug_false", "require_admins"],
            "class": "django.utils.log.AdminEmailHandler",
            "email_backend": EMAIL_BACKEND,
            "include_html": True,
        },
        "syslog": {
            "level": "DEBUG",
            "filters": ["require_production_true"],
            "class": "logging.handlers.SysLogHandler",
            "facility": "local6",
            "address": "/dev/log",
            "formatter": "syslog",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["mail_admins", "console", "syslog"],
            "level": "ERROR",
            "propagate": False,
        }
    },
}


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Calcutta"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/assets/"
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, "../static"),
    os.path.join(PROJECT_DIR, "../media"),
]
STATIC_ROOT = os.path.join(PROJECT_DIR, "../assets/")
MEDIA_ROOT = os.path.join(PROJECT_DIR, "../media/")
MEDIA_URL = "/media/"

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    # other finders..
    "compressor.finders.CompressorFinder",
)


CRISPY_TEMPLATE_PACK = "bootstrap4"

# NOTE: This must be last few lines of this file.
try:
    from .local_settings import *  # noqa
except ImportError:
    pass
